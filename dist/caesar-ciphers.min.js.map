{"version":3,"file":"caesar-ciphers.min.js","sources":["../node_modules/almond/almond.js","caesar-ciphers/caesar-cipher.js","caesar-ciphers/string-append.js","caesar-ciphers/effective-string-building.js","caesar-ciphers/string-utils.js","caesar-ciphers/typed-array-buffer.js","caesar-ciphers/node-buffer.js","caesar-ciphers.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../node_modules/almond/almond\", function(){});\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\ndefine('caesar-ciphers/caesar-cipher',[],function() {\n  'use strict';\n\n  /**\n    * @module caesar-ciphers\n    */\n\n\n  /**\n    * @class CaesarCipher\n    * @constructor\n    * @param {number} shift cipher key\n    */\n  function CaesarCipher(shift) {\n    var _shift;\n\n    this.getShift = function(){\n      return _shift;\n    };\n\n    this.setShift = function(shift){\n      if (!/^-?\\d+$/.test(shift)) {\n        throw 'Shift \"' + shift + '\" is not an number.';\n      }\n      _shift = ((shift % 26) + 26) % 26;\n      return this;\n    };\n\n    this.setShift(shift || 0);\n  }\n\n  /**\n    * @property id\n    * @type String\n    * @readOnly\n    * @default undefined\n    */\n  CaesarCipher.id = undefined;\n  CaesarCipher.prototype.id = undefined;\n\n  /**\n    * @method encrypt\n    * @param {string} plaintext string to encrpyt\n    * @return {string} encrypted string\n    */\n  CaesarCipher.prototype.encrypt = function(plaintext) {\n    return this.rotate(this.getShift(), String(plaintext));\n  };\n\n  /**\n    * @method decrypt\n    * @param {string} ciphertext string to decrypt\n    * @returns {string} decrypted string\n    */\n  CaesarCipher.prototype.decrypt = function(ciphertext) {\n    return this.rotate(26-this.getShift(), String(ciphertext));\n  };\n\n  /**\n    * @method rotate\n    * @param {number} shift shift to rotate\n    * @param {string} text string to rotate\n    * @return {string}\n    */\n  CaesarCipher.prototype.rotate = function() {\n    throw new Error('must be implemented by subclass!');\n  };\n\n  /**\n    * @method isSupported\n    * @return {boolean}\n    */\n  CaesarCipher.prototype.isSupported = function() {\n    throw new Error('must be implemented by subclass!');\n  };\n\n  return CaesarCipher;\n});\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\ndefine('caesar-ciphers/string-append',['./caesar-cipher'], function (CaesarCipher) {\n  'use strict';\n\n  /**\n    * @module caesar-ciphers\n    */\n\n\n  /**\n    * @class StringAppend\n    * @constructor\n    * @extends CaesarCipher\n    * @param {number} shift cipher key\n    */\n  function StringAppend(shift) {\n    CaesarCipher.call(this, shift);\n  }\n\n  // LEGACY CHECK\n  if(typeof Object.create === 'function'){\n    StringAppend.prototype = Object.create(CaesarCipher.prototype);\n  }else{\n    // IE6, Safari4 etc\n    StringAppend.prototype = new CaesarCipher();\n  }\n\n  /**\n    * @property id\n    * @type String\n    * @default 'StringAppend'\n    * @readOnly\n    */\n  StringAppend.id = 'StringAppend';\n  StringAppend.prototype.id = 'StringAppend';\n\n  StringAppend.prototype.rotate = function(shift, text) {\n    var buffer = '',\n        i, len, c;\n\n    for (i = 0, len = text.length; i < len; i++) {\n      c = text.charCodeAt(i);\n\n      if (c>64 && c<91) {\n        // upper case\n        buffer += String.fromCharCode(((c - 65 + shift) % 26) + 65);\n      } else if (c>96 && c<123) {\n        // lower case\n        buffer += String.fromCharCode(((c - 97 + shift) % 26) + 97);\n      } else {\n        buffer += String.fromCharCode(c);\n      }\n    }\n    return buffer;\n  };\n\n  StringAppend.isSupported = function() {\n    return true;\n  };\n\n  return StringAppend;\n});\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\ndefine('caesar-ciphers/effective-string-building',['./caesar-cipher'], function(CaesarCipher) {\n  'use strict';\n\n  /**\n    * @module caesar-ciphers\n    */\n\n\n  /* jshint -W101 */\n  /**\n    * see http://trephine.org/t/index.php?title=Efficient_JavaScript_string_building\n    *\n    * @class EffectiveStringBuilding\n    * @constructor\n    * @extends CaesarCipher\n    * @param {number} shift cipher key\n    */\n  /* jshint +W101 */\n  function EffectiveStringBuilding(shift) {\n    CaesarCipher.call(this, shift);\n  }\n\n  // LEGACY CHECK\n  if(typeof Object.create === 'function'){\n    EffectiveStringBuilding.prototype = Object.create(CaesarCipher.prototype);\n  }else{\n    // IE6, Safari4 etc\n    EffectiveStringBuilding.prototype = new CaesarCipher();\n  }\n\n  /**\n    * @property id\n    * @type String\n    * @default 'EffectiveStringBuilding'\n    * @readOnly\n    */\n  EffectiveStringBuilding.id = 'EffectiveStringBuilding';\n  EffectiveStringBuilding.prototype.id = 'EffectiveStringBuilding';\n\n  EffectiveStringBuilding.prototype.rotate = function(shift, text) {\n    var len = text.length,\n      buffer = new Array(len),\n      i, c;\n\n    for (i = 0; i < len; i++) {\n      c = text.charCodeAt(i);\n\n      if (c>64 && c<91) {\n        // upper case\n        buffer[i] = String.fromCharCode(((c - 65 + shift) % 26) + 65);\n      } else if (c>96 && c<123) {\n        // lower case\n        buffer[i] = String.fromCharCode(((c - 97 + shift) % 26) + 97);\n      } else {\n        buffer[i] = String.fromCharCode(c);\n      }\n    }\n    return buffer.join('');\n  };\n\n  EffectiveStringBuilding.isSupported = function() {\n    return true;\n  };\n\n  return EffectiveStringBuilding;\n});\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\ndefine('caesar-ciphers/string-utils',[],function () {\n  'use strict';\n\n  /**\n    * @module string-utils\n    */\n\n\n  /* jshint -W101 */\n  /**\n    * Returns the string represented by a buffer\n    *\n    * @see {@link http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String}\n    *\n    * @param {Uint16Array} buffer - buffer to convert\n    * @returns {string} representation of buffer\n    */\n  /* jshint +W101 */\n  function uint16ArrayToString(buffer){\n    /* @see {@link https://bugs.webkit.org/show_bug.cgi?id=80797} */\n    var ARGS_MAX = 65535,\n        len = buffer.length,\n        buf = '',\n        startPos = 0,\n        endPos = 0;\n\n    if(len <= ARGS_MAX){\n      return String.fromCharCode.apply(null, buffer);\n    }\n\n    do{\n      if(endPos>len){\n        endPos=len;\n      }else{\n        endPos+=ARGS_MAX;\n      }\n      buf += String.fromCharCode.apply(null, buffer.subarray(startPos,endPos));\n      startPos += ARGS_MAX;\n    }while(endPos < len);\n\n    return buf;\n  }\n\n  uint16ArrayToString.isSupported = function isSupported(){\n    try{\n      return String.fromCharCode.apply(null, new Uint16Array()) === '';\n    }catch(err){\n      return false;\n    }\n  };\n\n  return {\n    uint16ArrayToString: uint16ArrayToString\n  };\n});\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\ndefine('caesar-ciphers/typed-array-buffer',['./caesar-cipher', './string-utils'],\n  function (CaesarCipher, stringUtils) {\n    'use strict';\n\n    /**\n      * @module caesar-ciphers\n      */\n\n    /**\n      * IE >= v10.0; Firefox >= v4.0; Chrome v7.0; Safari >=v5.1\n      *\n      * see link http://www.khronos.org/registry/typedarray/specs/latest/\n      *\n      * and http://caniuse.com/typedarrays\n      *\n      * @class TypedArrayBuffer\n      * @constructor\n      * @extends CaesarCipher\n      * @param {number} shift cipher key\n      */\n    function TypedArrayBuffer(shift) {\n      CaesarCipher.call(this, shift);\n    }\n\n    // LEGACY CHECK\n    if(typeof Object.create === 'function'){\n      TypedArrayBuffer.prototype = Object.create(CaesarCipher.prototype);\n    }else{\n      // IE6, Safari4 etc\n      TypedArrayBuffer.prototype = new CaesarCipher();\n    }\n\n    /**\n      * @property id\n      * @type String\n      * @default 'TypedArrayBuffer'\n      * @readOnly\n      */\n    TypedArrayBuffer.id = 'TypedArrayBuffer';\n    TypedArrayBuffer.prototype.id = 'TypedArrayBuffer';\n\n    TypedArrayBuffer.prototype.rotate = function(shift, text) {\n      var len = text.length,\n          buffer = new Uint16Array(len),\n          i, c;\n\n      for (i = 0; i < len; i++) {\n        c = text.charCodeAt(i);\n\n        if (c>64 && c<91) {\n          // upper case\n          buffer[i] = ((c - 65 + shift) % 26) + 65;\n        } else if (c>96 && c<123) {\n          // lower case\n          buffer[i] = ((c - 97 + shift) % 26) + 97;\n        } else {\n          buffer[i] = c;\n        }\n      }\n      return stringUtils.uint16ArrayToString(buffer);\n    };\n\n    TypedArrayBuffer.isSupported = function() {\n      return stringUtils.uint16ArrayToString.isSupported();\n    };\n\n    return TypedArrayBuffer;\n  }\n);\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\ndefine('caesar-ciphers/node-buffer',['./caesar-cipher'], function (CaesarCipher) {\n  'use strict';\n\n  /**\n    * @module caesar-ciphers\n    */\n\n\n  /**\n    * @class NodeBuffer\n    * @constructor\n    * @extends CaesarCipher\n    * @param {number} shift cipher key\n    */\n  function NodeBuffer(shift) {\n    CaesarCipher.call(this, shift);\n  }\n\n  // LEGACY CHECK\n  if(typeof Object.create === 'function'){\n    NodeBuffer.prototype = Object.create(CaesarCipher.prototype);\n  }else{\n    // IE6, Safari4 etc\n    NodeBuffer.prototype = new CaesarCipher();\n  }\n\n  /**\n    * @property id\n    * @type String\n    * @default 'NodeBuffer'\n    * @readOnly\n    */\n  NodeBuffer.id = 'NodeBuffer';\n  NodeBuffer.prototype.id = 'NodeBuffer';\n\n  NodeBuffer.prototype.rotate = function(shift, text) {\n    var buffer = new Buffer(text, 'utf16le'),\n        i, len, c;\n\n    for (i = 0, len = buffer.length; i < len; i+=2) {\n      c = buffer.readUInt16LE(i);\n      if (c>64 && c<91) {\n        // upper case\n        c = ((c - 65 + shift) % 26) + 65;\n      } else if (c>96 && c<123) {\n        // lower case\n        c = ((c - 97 + shift) % 26) + 97;\n      }\n      buffer.writeUInt16LE(c,i);\n    }\n    return buffer.toString('utf16le');\n  };\n\n  NodeBuffer.isSupported = function() {\n    try{\n      var buffer = new Buffer('A', 'utf16le');\n      return buffer.readUInt16LE(0) === 65;\n    }catch(e){\n      return false;\n    }\n    return typeof Buffer === 'function';\n  };\n\n  return NodeBuffer;\n});\n\n","/* istanbul ignore else */\nif (typeof define !== 'function') { var define = require('amdefine')(module); }\n\n/**\n * @module caesar-ciphers\n * @main caesar-ciphers\n */\n\ndefine(\n  'caesar-ciphers',[\n    './caesar-ciphers/string-append',\n    './caesar-ciphers/effective-string-building',\n    './caesar-ciphers/typed-array-buffer',\n    './caesar-ciphers/node-buffer'\n  ],\n  function (StringAppend, EffectiveStringBuilding,\n    TypedArrayBuffer, NodeBuffer) {\n    'use strict';\n\n    /**\n      * @module caesar-ciphers\n      */\n\n\n    var implModules = [\n      // default: last one wins\n      StringAppend,\n      EffectiveStringBuilding,\n      TypedArrayBuffer,\n      NodeBuffer\n    ],\n    ciphers = {},\n    supportedCiphers = {},\n    defaultCipher,\n    i, len, impl;\n\n    // init cipherIds and defaultId\n    for(i=0, len = implModules.length; i<len; i++){\n      impl = implModules[i];\n      ciphers[impl.id] = impl;\n      if(impl.isSupported()){\n        supportedCiphers[impl.id] = impl;\n        defaultCipher = impl;\n      }\n    }\n\n    return {\n      ciphers: ciphers,\n      supportedCiphers: supportedCiphers,\n      defaultCipher: defaultCipher\n    };\n  }\n);\n\n"]}